num training examples:  3276
num testing examples:  820
GNN2(
  (GCNconv1): GCNConv(8, 128)
  (GCNconv2): GCNConv(128, 64)
  (GCNconv3): GCNConv(64, 32)
  (GCNconv4): GCNConv(32, 16)
  (CNNconv1): Conv1d(16, 64, kernel_size=(10,), stride=(1,))
  (CNNconv2): Conv1d(64, 32, kernel_size=(10,), stride=(1,))
  (CNNconv3): Conv1d(32, 16, kernel_size=(10,), stride=(1,))
  (avg_pool): AvgPool1d(kernel_size=(2,), stride=(2,), padding=(0,))
  (fc1): Linear(in_features=384, out_features=8192, bias=True)
  (fc2): Linear(in_features=8192, out_features=1, bias=True)
  (dropout): Dropout(p=0.1, inplace=False)
)
Parameters:  3210081
Epoch 1/100, Loss: 49.9978
Epoch 2/100, Loss: 1.1297
Epoch 3/100, Loss: 0.6223
Epoch 4/100, Loss: 0.5839
Epoch 5/100, Loss: 0.5841
Epoch 6/100, Loss: 0.5846
Epoch 7/100, Loss: 0.5796
Epoch 8/100, Loss: 0.5821
Epoch 9/100, Loss: 0.5820
Epoch 10/100, Loss: 0.5808
Epoch 11/100, Loss: 0.5830
Epoch 12/100, Loss: 0.5730
Epoch 13/100, Loss: 0.5761
Epoch 14/100, Loss: 0.5793
Epoch 15/100, Loss: 0.5705
Epoch 16/100, Loss: 0.5637
Epoch 17/100, Loss: 0.5613
Epoch 18/100, Loss: 0.5668
Epoch 19/100, Loss: 0.5513
Epoch 20/100, Loss: 0.5336
Epoch 21/100, Loss: 0.5187
Epoch 22/100, Loss: 0.5158
Epoch 23/100, Loss: 0.5042
Epoch 24/100, Loss: 0.5125
Epoch 25/100, Loss: 0.5136
Epoch 26/100, Loss: 0.5086
Epoch 27/100, Loss: 0.5021
Epoch 28/100, Loss: 0.5162
Epoch 29/100, Loss: 0.4814
Epoch 30/100, Loss: 0.4562
Epoch 31/100, Loss: 0.3947
Epoch 32/100, Loss: 0.3044
Epoch 33/100, Loss: 0.2328
Epoch 34/100, Loss: 0.1983
Epoch 35/100, Loss: 0.1660
Epoch 36/100, Loss: 0.1484
Epoch 37/100, Loss: 0.1253
Epoch 38/100, Loss: 0.1170
Epoch 39/100, Loss: 0.1089
Epoch 40/100, Loss: 0.0992
Epoch 41/100, Loss: 0.0941
Epoch 42/100, Loss: 0.0916
Epoch 43/100, Loss: 0.0911
Epoch 44/100, Loss: 0.0844
Epoch 45/100, Loss: 0.0789
Epoch 46/100, Loss: 0.0786
Epoch 47/100, Loss: 0.0703
Epoch 48/100, Loss: 0.0727
Epoch 49/100, Loss: 0.0682
Epoch 50/100, Loss: 0.0649
Epoch 51/100, Loss: 0.0601
Epoch 52/100, Loss: 0.0606
Epoch 53/100, Loss: 0.0591
Epoch 54/100, Loss: 0.0541
Epoch 55/100, Loss: 0.0518
Epoch 56/100, Loss: 0.0563
Epoch 57/100, Loss: 0.0481
Epoch 58/100, Loss: 0.0515
Epoch 59/100, Loss: 0.0508
Epoch 60/100, Loss: 0.0489
Epoch 61/100, Loss: 0.0467
Epoch 62/100, Loss: 0.0483
Epoch 63/100, Loss: 0.0461
Epoch 64/100, Loss: 0.0450
Epoch 65/100, Loss: 0.0475
Epoch 66/100, Loss: 0.0449
Epoch 67/100, Loss: 0.0398
Epoch 68/100, Loss: 0.0401
Epoch 69/100, Loss: 0.0397
Epoch 70/100, Loss: 0.0391
Epoch 71/100, Loss: 0.0409
Epoch 72/100, Loss: 0.0373
Epoch 73/100, Loss: 0.0414
Epoch 74/100, Loss: 0.0393
Epoch 75/100, Loss: 0.0359
Epoch 76/100, Loss: 0.0373
Epoch 77/100, Loss: 0.0340
Epoch 78/100, Loss: 0.0375
Epoch 79/100, Loss: 0.0370
Epoch 80/100, Loss: 0.0323
Epoch 81/100, Loss: 0.0334
Epoch 82/100, Loss: 0.0327
Epoch 83/100, Loss: 0.0364
Epoch 84/100, Loss: 0.0341
Epoch 85/100, Loss: 0.0321
Epoch 86/100, Loss: 0.0313
Epoch 87/100, Loss: 0.0313
Epoch 88/100, Loss: 0.0313
Epoch 89/100, Loss: 0.0318
Epoch 90/100, Loss: 0.0305
Epoch 91/100, Loss: 0.0319
Epoch 92/100, Loss: 0.0279
Epoch 93/100, Loss: 0.0287
Epoch 94/100, Loss: 0.0280
Epoch 95/100, Loss: 0.0288
Epoch 96/100, Loss: 0.0290
Epoch 97/100, Loss: 0.0266
Epoch 98/100, Loss: 0.0276
Epoch 99/100, Loss: 0.0267
Epoch 100/100, Loss: 0.0272
Average Test Loss: 0.0005
RMSE: 1.9018
Traceback (most recent call last):
  File "C:\Users\ediso\MISL\structure_to_signal\model.py", line 285, in <module>
    plot_true_vs_predicted(true_values, predicted_values)
  File "C:\Users\ediso\MISL\structure_to_signal\model.py", line 34, in plot_true_vs_predicted
    wandb.log({"True vs. Predicted Values": wandb.Plotly(plt)})
                                            ^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\wandb\sdk\data_types\plotly.py", line 63, in __init__
    val = util.matplotlib_to_plotly(val)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\wandb\util.py", line 508, in matplotlib_to_plotly
    return tools.mpl_to_plotly(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\plotly\tools.py", line 111, in mpl_to_plotly
    matplotlylib.Exporter(renderer).run(fig)
  File "C:\Python311\Lib\site-packages\plotly\matplotlylib\mplexporter\exporter.py", line 53, in run
    self.crawl_fig(fig)
  File "C:\Python311\Lib\site-packages\plotly\matplotlylib\mplexporter\exporter.py", line 124, in crawl_fig
    self.crawl_ax(ax)
  File "C:\Python311\Lib\site-packages\plotly\matplotlylib\mplexporter\exporter.py", line 146, in crawl_ax
    self.draw_collection(ax, collection)
  File "C:\Python311\Lib\site-packages\plotly\matplotlylib\mplexporter\exporter.py", line 289, in draw_collection
    offset_order = offset_dict[collection.get_offset_position()]
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'PathCollection' object has no attribute 'get_offset_position'